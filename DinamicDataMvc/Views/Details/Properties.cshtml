@model DinamicDataMvc.Models.InputModel

@{
    ViewData["Title"] = "Properties";
}

<h1>Properties</h1>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Field)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Field)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Value)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Value)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MaxLength)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MaxLength)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Size)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Size)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Required)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Required)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Back to list", "Field", "GetFields")
</div>
