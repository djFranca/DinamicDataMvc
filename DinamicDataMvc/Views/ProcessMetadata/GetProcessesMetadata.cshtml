@model IEnumerable<DinamicDataMvc.Models.MetadataListModel>
@{
    ViewData["Title"] = "TestMetadataList";
}
<section>
    <div class="text-body">
        <h4>Filters</h4>
    </div>
    @using (Html.BeginForm("Fake", "TestMetadataList", FormMethod.Get))
    {
        @await Html.PartialAsync("_Filter")
    }
</section>
<br />
<section>
    <div class="text-body">
        <h4>Metadata</h4>
    </div>
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th valign="middle" align="center">
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th valign="middle" align="center">
                        @Html.DisplayNameFor(model => model.Version)
                    </th>
                    <th valign="middle" align="center">
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th valign="middle" align="center">
                        @Html.DisplayNameFor(model => model.Branch)
                    </th>
                    <th valign="middle" align="center">
                        @Html.DisplayNameFor(model => model.State)
                    </th>
                </tr>
            </thead>
            <tbody id="ProcessList">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(@Html.DisplayTextFor(modelItem => item.Name), "ProcessDetails", "ProcessMetadata", new { ID = item.Name })
                        </td>
                        <td>
                            @Html.ActionLink(@Html.DisplayTextFor(modelItem => item.Version), "ByVersion", "ProcessDetails", new { ID = item.Version, Name = item.Name })
                        </td>
                        <td>
                            @Html.DisplayTextFor(modelItem => item.Date)
                        </td>
                        <td>
                            @foreach (string branch in item.Branch)
                            {
                                <span>
                                    @Html.DisplayTextFor(s => branch)
                                </span>
                            }
                        </td>
                        <td>
                            @Html.DisplayTextFor(modelItem => item.State)
                        </td>
                        <td>
                            @Html.ActionLink("Delete", "Delete", new { /*ID = item.Id*/ })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>

