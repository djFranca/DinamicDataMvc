@model IEnumerable<DinamicDataMvc.Models.BranchModel>
@{
    ViewData["Title"] = "PopulateBranchCollection";
    var message = ViewBag.Message;
    var collectionIsEmpty = ViewBag.EmptyCollection;
}
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="~/js/site.js"></script>
    <link rel="stylesheet" href="~/css/PageStyleFile.css" />
    <style>
        #sucess {
            color:green; 
            text-align:end;
        }

        #fail {
            color:red; 
            text-align:end;
        }

        .infoMessage {
            font-family: Arial, Helvetica, sans-serif;
            font-size: large;
            font-display:auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <div id="subtitleDiv">
            <h2 id="ProcessDescription"> Branch Collection Info </h2>
        </div>
        
        @if (collectionIsEmpty.Equals("true"))
        {
            <p class="infoMessage" id="sucess"><strong>@message</strong></p>
        }
        @if (collectionIsEmpty.Equals("false"))
        {
            <p class="infoMessage" id="fail"><strong>@message</strong></p>
        }
    </div>
    <div class="container">
        <div class="table-responsive table-striped">
            <table class="table table-bordered" border="1" id="processResultTable">
                <thead>
                    <tr id="tableHeader">
                        <th>
                            @Html.DisplayName("Branch Order Number")
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Code)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 1; i <= Model.Count(); i++)
                    {
                        <tr id="tableBody">
                            <td>
                                #_@i
                            </td>
                            <td>
                                @Html.DisplayFor(modelIndex => Model.ElementAt(i - 1).Code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelIndex => Model.ElementAt(i - 1).Description)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="container">
        <button type="button" onclick="GoBack();"><i class="fa fa-toggle-left"> Go Back </i></button>
    </div>
</body>

